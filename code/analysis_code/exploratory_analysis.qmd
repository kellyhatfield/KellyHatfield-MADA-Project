---
title: "Exploratory analysis "
author: "Kelly Hatfield"
date: "02/24/2023"
output: html_document
---

This Quarto file loads the cleaned data and does some exploring.

# Setup

```{r}
#load needed packages. make sure they are installed.
library(here) 
library (tidyverse)

library(skimr)

library(ggplot2)

library(tidymodels)
library(performance)
library(stringr)
```

Load the data.

```{r}
#Path to data. Note the use of the here() package and not absolute paths
data_location <- here::here("data","processed_data","processeddata.rds")
#load data
mydata <- readRDS(data_location)

#Reminder of variable names
ls(mydata)
```

# Data exploration through tables

Showing a bit of code to produce and save a summary table.

```{r}
summary_df = skimr::skim(mydata)
print(summary_df)
# save to file
summarytable_file = here("results", "summarytable.rds")
saveRDS(summary_df, file = summarytable_file)
```

We are saving the results to the `results` folder. Depending on how many tables/figures you have, it might make sense to have separate folders for each. And/or you could have separate folders for exploratory tables/figures and for final tables/figures. Just choose a setup that makes sense for your project and works for you, and provide enough documentation that someone can understand what you are doing.

# Data exploration through figures

Histogram plots for the continuous outcomes.

First, Risk Standardized HAI Rate

```{r}
p1 <- mydata %>% ggplot(aes(x=HAI_039_RS_Rate)) + geom_histogram() 
plot(p1)
figure_file = here("results","RiskStandardized_HAI_Rate_distribution.png")
ggsave(filename = figure_file, plot=p1) 


```

Now Total Nurse Staffing per Resident per Day

```{r}

mytitle <- "Figure: Distribution of adjusted total nursing staffing hours per resident per day"

p2 <- mydata %>% ggplot(aes(x=Adjusted.Total.Nurse.Staffing.Hours.per.Resident.per.Day)) + geom_histogram() + labs(
    x = "Adjusted total nursing staffing hours per resident per day",              # x axis title
    y = "Count of Nursing Homes",   # y axis title
    title=  str_wrap(mytitle, 60) ,      # main title of figure
    colour = "Continent"      # title of legend
  ) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1),
        plot.title = element_text(face = "bold"))

plot(p2)
figure_file = here("results","Adj_Tot_Staff_prpd.png")
ggsave(filename = figure_file, plot=p2) 
```

Now showing relationship between staffing and HAI rates

```{r}
p3 <- mydata %>% ggplot(aes(x=Adjusted.Total.Nurse.Staffing.Hours.per.Resident.per.Day, y=HAI_039_RS_Rate, color=Staffing.Rating)) + geom_point() + geom_smooth(method='lm')
plot(p3)
figure_file = here("results","staff_hai.png")
ggsave(filename = figure_file, plot=p3) 



p3b <- mydata %>% ggplot(aes(x=as.factor(Staffing.Rating), y=HAI_039_RS_Rate)) + geom_boxplot() + geom_jitter(width=0.15, alpha=0.08, color="black", fill="white")
plot(p3b)


figure_file = here("results","staffrating_hai.png")
ggsave(filename = figure_file, plot=p3b) 

```

Once more height as function of weight, stratified by ownership type.

```{r}

mydata %>% count(Ownership.Type)

mydata$owner <- substr(mydata$Ownership.Type, 1, 10)

aggregate(mydata$Adjusted.Total.Nurse.Staffing.Hours.per.Resident.per.Day, list(mydata$owner), FUN=mean, na.rm=TRUE)
aggregate(mydata$HAI_039_RS_Rate, list(mydata$owner), FUN=mean)


p4 <- mydata %>% ggplot(aes(x=as.factor(owner), y=HAI_039_RS_Rate)) + geom_boxplot() + geom_smooth(method='lm')
plot(p4)
figure_file = here("results","hai_ownership.png")
ggsave(filename = figure_file, plot=p4) 

view(mydata)
p5 <- mydata %>% ggplot(aes(x=as.factor(owner), y=Adjusted.Total.Nurse.Staffing.Hours.per.Resident.per.Day)) + geom_boxplot() + geom_smooth(method='lm')
plot(p5)
figure_file = here("results","staff_ownership.png")
ggsave(filename = figure_file, plot=p5) 


```

# Changing our outcome

In this plot we categorized our outcome as a 3-level variable: better than the national rate, worse than the national rate or no different than the national rate.

```{r}


p5 <-  mydata %>% ggplot(aes(x=as.factor(COMP_PERF), y=Adjusted.Total.Nurse.Staffing.Hours.per.Resident.per.Day)) + geom_boxplot() + geom_jitter(width=0.15, alpha=0.08, color="black", fill="white")
plot(p5)
  
figure_file = here("results","staff_hai_compscore.png")
ggsave(filename = figure_file, plot=p5) 

```

We find that while nursing homes who have rates better than the national rate do appear to have higher staffing scores, nursing homes no different and worse than the national rate appear more similar in distribution.

## Modeling Exercises

First, I have decided to split the dataset into test and training sets.

```{r}
# Fix the random numbers by setting the seed 
# This enables the analysis to be reproducible when random numbers are used 
set.seed(555)
# Put 3/4 of the data into the training set 
data_split <- initial_split(mydata, prop = 3/4)

# Create data frames for the two sets:
train_data <- training(data_split)
test_data  <- testing(data_split)

```

For this section I have decided I am going to assess if staffing rating adds additional information to my model that includes staffing rate. For this model we will use the risk adjusted HAI rate as a continuous outcome. We will use a linear model. We will make three models:

1.  Model with staffing rate and other covariates of interest (Ownership Type, Average Number of Residents per Day, and staffing rate (the continuous value)
2.  Model with staffing rating and other covariates of interest (Ownership Type, Average Number of Residents per day, and staffing rating (the categorical value)
3.  Model with both staffing rating and staffing rate + other covariates of interest

```{r}
#Model 1


recipe_1 <- recipe(HAI_039_RS_Rate ~ owner + Average.Number.of.Residents.per.Day + Adjusted.Total.Nurse.Staffing.Hours.per.Resident.per.Day + Number.of.Citations.from.Infection.Control.Inspections + Total.Weighted.Health.Survey.Score, data= train_data)


recipe_2 <- recipe(HAI_039_RS_Rate ~ owner + Average.Number.of.Residents.per.Day + Number.of.Citations.from.Infection.Control.Inspections + Total.Weighted.Health.Survey.Score + Staffing.Rating, data= train_data)

recipe_3 <- recipe(HAI_039_RS_Rate ~ owner + Average.Number.of.Residents.per.Day + Adjusted.Total.Nurse.Staffing.Hours.per.Resident.per.Day + Number.of.Citations.from.Infection.Control.Inspections + Total.Weighted.Health.Survey.Score + Staffing.Rating, data= train_data)


#model: linear regression using GLM engine
ln_mod <- linear_reg() %>% set_engine ("lm")


#workflow: tying together linear model and recipe of chocie
wflow1 <- workflow() %>% add_model(ln_mod) %>% add_recipe(recipe_1)
wflow2 <- workflow() %>% add_model(ln_mod) %>% add_recipe(recipe_2)
wflow3 <- workflow() %>% add_model(ln_mod) %>% add_recipe(recipe_3)

#Fitting the model to train dataset
model_fit1 <- wflow1 %>%  fit(data = train_data)
model_fit2 <- wflow2 %>%  fit(data = train_data)
model_fit3 <- wflow3 %>%  fit(data = train_data)

#Looking at model output;
model_fit1 %>% extract_fit_parsnip() %>%  tidy()
model_fit2 %>% extract_fit_parsnip() %>%  tidy()
model_fit3 %>% extract_fit_parsnip() %>%  tidy()




#Applying the model to unseen test data
predict(model_fit2, test_data)
model_aug2<- augment(model_fit2, test_data)
  
#pull RS HAI Rate and predictions
temps <- model_aug2 %>% pull(HAI_039_RS_Rate)
pred <- model_aug2 %>% pull(.pred)

#run rmse
rmse_vec(temps, pred)

#Selecting model 2 as final model

#Running on test data




```

My key takeaways from these three models is that Model 2 and Model 3 have very similar R\^2 fits. So they are likely not adding that much information by including both staffing rating and the staffing rate in the same model. Also, while less important, we see that staffing rate is not significantly associated with our outcome in this fully adjusted model.
